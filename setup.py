
import os, os.path, sys, shutil, re, itertools
from distutils.core import setup, Extension

#FIXME: still needed ?
try:
    import ctypes
except Exception, e:
    print(e)
    print("A working 'ctypes' module is required.")
    sys.exit(1)


pack_name = 'rpy2'
pack_version = '1.0-dev'

RHOMES = os.getenv('RHOMES')

if RHOMES is None:
    
    RHOMES = os.popen("R RHOME").readlines()
    #Twist if 'R RHOME' spits out a warning
    if RHOMES[0].startswith("WARNING"):
        RHOMES = RHOMES[1]
    else:
        RHOMES = RHOMES[0]
    RHOMES = [RHOMES, ]
else:
    RHOMES = RHOMES.split(os.pathsep)


def get_rversion(RHOME):
    r_exec = os.path.join(RHOME, 'bin', 'R')
    # Twist if Win32
    if sys.platform == "win32":
        rp = os.popen3('"'+r_exec+'" --version')[2]
    else:
        rp = os.popen('"'+r_exec+'" --version')
    rversion = rp.readline()
    #Twist if 'R RHOME' spits out a warning
    if rversion.startswith("WARNING"):
        rversion = rp.readline()
    m = re.match('^R version ([^ ]+) .+$', rversion)
    rversion = m.groups()[0]
    rversion = rversion.split('.')
    rversion[0] = int(rversion[0])
    rversion[1] = int(rversion[1])
    return rversion

def cmp_version(x, y):
    if (x[0] < y[0]):
        return -1
    if (x[0] > y[0]):
        return 1
    if (x[0] == y[0]):
        if len(x) == 1 or len(y) == 1:
            return 0
        return cmp_version(x[1:], y[1:])

def get_rconfig(RHOME, about):
    r_exec = os.path.join(RHOME, 'bin', 'R')
    cmd = '"'+r_exec+'" CMD config '+about
    rp = os.popen(cmd)
    rconfig = rp.readline()
    #Twist if 'R RHOME' spits out a warning
    if rconfig.startswith("WARNING"):
        rconfig = rp.readline()
    rconfig = rconfig.strip()
    rconfig_m = re.match('^(-L.+) (-l.+)$', rconfig)
    if rconfig_m is None:
        raise Exception(cmd + '\nreturned\n' + rconfig)
    return rconfig_m.groups()

rnewest = [0, 0, 0]
rversions = []
for RHOME in RHOMES:
    RHOME = RHOME.strip()
    rversion = get_rversion(RHOME)
    if cmp_version(rversion[:2], [2, 7]) == -1:
        raise Exception("R >= 2.7 required.")
    rversions.append(rversion)

def getRinterface_ext(RHOME, r_packversion):
    r_libs = [os.path.join(RHOME, 'lib'), os.path.join(RHOME, 'modules')]
    
    #f_in = open(os.path.join('rpy', 'rinterface', '__init__.py.in'), 'r')
    #f_out = open(os.path.join('rpy', 'rinterface', '__init__.py'), 'w')
    #f_out.write('# This file is automatically generated when installing rpy2\n')
    #f_out.write('# For permanent changes, ' +\
    #                'edit __init__py.in in the source directory.\n\n')

    #for row in f_in:
    #    row = row.replace('%R_HOME%', RHOME)
    #    f_out.write(row)

    #f_in.close()
    #f_out.close()

    rinterface_ext = Extension(
            pack_name + '.rinterface.rinterface',
            [os.path.join('rpy', 'rinterface', 'array.c'), 
             os.path.join('rpy', 'rinterface', 'r_utils.c'),
             os.path.join('rpy', 'rinterface', 'rinterface.c')],
            include_dirs = [ os.path.join(RHOME, 'include'), 
                            os.path.join('rpy', 'rinterface')],
            libraries = ['R', 'Rlapack', 'Rblas'],
            library_dirs = r_libs,
            #define_macros = [('RPY_RINTERFACE_INIT', 'initrinterface_' + r_packversion), ],
            runtime_library_dirs = r_libs,
            extra_link_args = get_rconfig(RHOME, '--ldflags') +\
                              get_rconfig(RHOME, 'LAPACK_LIBS') +\
                              get_rconfig(RHOME, 'BLAS_LIBS'),
            )

    return rinterface_ext


rinterface_exts = []
rinterface_rversions = []

for rversion, RHOME in itertools.izip(rversions, RHOMES):        
    RHOME = RHOME.strip()
    #if (cmp_version(rversion, rnewest) == 0):
    #r_packversion = None
    r_packversion = '%i%02i%s' %(rversion[0], rversion[1], rversion[2])
    ri_ext = getRinterface_ext(RHOME, r_packversion)
    rinterface_exts.append(ri_ext)
    rinterface_rversions.append(r_packversion)

pack_dir = {pack_name: 'rpy'}

setup(name = "rpython",
      version = pack_version,
      description = "Python interface to the R language",
      url = "http://rpy.sourceforge.net",
      license = "(L)GPL",
      ext_modules = rinterface_exts,
      package_dir = pack_dir,
      packages = [pack_name,
                  pack_name+'.robjects',
                  pack_name+'.robjects.tests'] + \
                 [pack_name + '.rinterface', pack_name + '.rinterface.tests']
                 #[pack_name + '.rinterface_' + x for x in rinterface_rversions] + \
                 #[pack_name + '.rinterface_' + x + '.tests' for x in rinterface_rversions]
      )


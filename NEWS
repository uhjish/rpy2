SVN
===

New features
------------

:mod:`rpy2.robjects`:

- added :meth:`setenvironment` for :class:`RFormula`, and defined `environment` as a property

- defined `names` as a property for :class:`RVector`


Changes
-------

:mod:`rpy2.robjects`:

- constructor for RDataFrame now now accepts either :class:`rlike.container.TaggedList` or :class:`rinterface.SexpEnvironment`

:mod:`rpy2.rinterface`:

- :func:`sexpTypeEmbeddedR` is now called :func:`str_typeint`.

Bugs fixed
----------

- crash of :meth:`Sexp.enclos` when R not yet initialized (bug report #2078176)

- potential crash of :meth:`Sexp.frame` when R not yet initialized

- proper reference counting when handling, and deleting, :attr:`Sexp.__sexp__` generated CObjects

- setup.py: get properly the include directories (no matter where they are) #bug report and fix adapted from Robert Nuske

- setup.py: link to external lapack or blas library when relevant

- added a MANIFEST.in ensuring that headers get included in the source distribution


Release 2.0.0a3
===============

New features
------------

:mod:`rpy2.rinterface`:

- :func:`setReadConsole`: specify Python callback for console input

- `R` string vectors can now be built from Python unicode objects

- getter :attr:`__sexp__` to return an opaque C pointer to the underlying R object

- method :meth:`rsame` to test if the underlying R objects for two :class:`Sexp` are the same.

- added `emptyEnv` (R's C-level `R_EmptyEnv`)

- added method :meth:`Sexp.do_slot_assign`

:mod:`rpy2.robjects`:

- R string vectors can now be built from Python unicode objects

:mod:`rpy2.rlike`:

- module :mod:`functional` with the functions :func:`tapply`, :func:`listify`, :func:`iterify`.

- module :mod:`indexing` with the function :func:`order`

- method :meth:`TaggedList.sort` now implemented

 
Changes
-------

:mod:`rpy2.rinterface`:

- :func:`initEmbeddedR` is only initializing if R is not started (no effect otherwise, and no exception thrown anymore)

- the method :meth:`Sexp.typeof` was replaced by a Python `getter` :attr:`typeof`.

- the method :meth:`Sexp.named` was replaced by a Python `getter` :attr:`named`.

- R objects of type LANGSXP are now one kind of vector (... but this may change again)

- R objects of type EXPRSXP are now handled as vectors (... but this may change again)

- :func:`initEmbeddedR` renamed to :func:`initr`

- :func:`endEmbeddedR` renamed to :func:`endr`


:mod:`rpy2.robjects`:

- :class:`R` remains a singleton, but does not throw an exception when multiple instances are requested


Bugs fixed
----------

- unable to compile on Python2.4 (definition of aliases to Python2.5-specific were not where they should be).

- overflow issues on Python 2.4/64 bits when indexing R vector with very large integers.

- handling of negative indexes for :class:`SexpVector`'s :meth:`__getitem__` and :meth:`__setitem__` was missing

- trying to create an instance of :class:`SexpVector` before initializing R raises a RuntimeException (used to segfault)

- experimental method :meth:`enclos` was not properly exported

- setup.py was exiting prematurely when R was compiled against an existing BLAS library

- complex vectors should now be handled properly by :mod:`rpy2.rinterface.robjects`.

- methods :meth:`rownames` and :meth:`colnames` for :class:`RDataFrame` were incorrect.

Release 2.0.0a2
===============

New features
------------

:mod:`rpy2.rlike`:

- package for R-like features in Python

- module :mod:`rpy2.rlike.container` 

- class :class:`ArgsDict` in :mod:`rpy2.rlike.container`

- class :class:`TaggedList` in :mod:`rpy2.rlike.container`

:mod:`rpy2.rinterface`:

- method :meth:`named`, corresponding to R's C-level NAMED

- experimental methods :meth:`frame` and :meth:`enclos` for SexpEnvironment corresponding to R's C-level FRAME and ENCLOS

- method :meth:`rcall` for :class:`ClosureSexp`

- new experimental class :class:`SexpLang` for R language objects.


Bugs fixed
----------

- R stack checking is disabled (no longer crashes when multithreading)

- fixed missing R_PreserveObject for vectors (causing R part of the object to sometimes vanish during garbage collection)

- prevents calling an R function when R has been ended (raise :class:`RuntimeException`).


Release 2.0.0a1
===============

New features
------------

:mod:`rpy2.robjects`:

- method :meth:`getnames` for :class:`RVector`

- experimental methods :meth:`__setitem__` and :meth:`setnames` for :class:`RVector`

- method 'getnames' for :class:`RArray`

- new class :class:`RFormula`

- new helper class :class:`RVectorDelegator` (see below)

- indexing RVector the "R way" with subset is now possible through a delegating attribute (e.g., myvec.r[True] rather than myvec.subset(True)). #suggested by Michael Sorich

- new class :class:`RDataFrame`. The constructor :meth:`__init__` is still experimental (need for an ordered dictionnary, that will be in before the beta

- filled documentation about mapping between objects

Changes
-------

- many fixes and additions to the documentation

- improved GTK console in the demos

- changed the major version number to 2 in order to avoid confusion with rpy 1.x # Suggested by Peter and Gregory Warnes

- moved test.py to demos/example01.py

:mod:`rpy2.robjects`:

- changed method name `getNames` to `getnames` where available (all lower-case names for methods seems to be the accepted norm in Python).


Bugs fixed
----------

:mod:`rpy2.robjects`:

- fixed string representation of R object on Microsoft Windows (using fifo, not available on win32)

- :meth:`__getattr__` for :class:`RS4` is now using :meth:`ri2py` 

:mod:`rpy2.rinterface`:

- fixed context of evaluation for R functions (now R_GlobalEnv)

Release 1.0a0
=============

- first public release
